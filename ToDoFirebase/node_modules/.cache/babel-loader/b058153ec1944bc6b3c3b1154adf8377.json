{"ast":null,"code":"import _classCallCheck from \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/src/NoteForm/NoteForm.jsx\";\nimport React, { Component } from 'react';\nimport './NoteForm.css';\n\nvar NoteForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NoteForm, _Component);\n\n  function NoteForm(props) {\n    var _this;\n\n    _classCallCheck(this, NoteForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteForm).call(this, props));\n    _this.state = {\n      newNoteContent: ''\n    };\n    _this.handleUserInput = _this.handleUserInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.writeNote = _this.writeNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } //When user's input changes, set newNoteContent\n  //to the value in the input box\n\n\n  _createClass(NoteForm, [{\n    key: \"handleUserInput\",\n    value: function handleUserInput(e) {\n      this.setState({\n        newNoteContent: e.target.value //Value of text's inpput\n\n      });\n    }\n  }, {\n    key: \"writeNote\",\n    value: function writeNote() {\n      //Set noteContent for a value of inputs\n      this.props.addNote(this.state.newNoteContent); //set newNoteContent to an empty string\n\n      this.setState({\n        newNoteContent: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"formWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"noteInput\",\n        placeholder: \"Jerrome, par ici...\",\n        value: this.state.newNoteContent,\n        onChange: this.handleUserInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"noteButton\",\n        onClick: this.writeNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Add Note\"));\n    }\n  }]);\n\n  return NoteForm;\n}(Component);\n\nexport default NoteForm;","map":{"version":3,"sources":["/home/jerrome/Bureau/BeCode/learning-react/ToDoFirebase/src/NoteForm/NoteForm.jsx"],"names":["React","Component","NoteForm","props","state","newNoteContent","handleUserInput","bind","writeNote","e","setState","target","value","addNote"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,gBAAP;;IAEMC,Q;;;;;AACL,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACZC,MAAAA,cAAc,EAAE;AADJ,KAAb;AAGA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,uDAAvB;AACA,UAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,uDAAjB;AANkB;AAOlB,G,CAED;AACA;;;;;oCACgBE,C,EAAG;AAClB,WAAKC,QAAL,CAAc;AACbL,QAAAA,cAAc,EAAEI,CAAC,CAACE,MAAF,CAASC,KADZ,CACkB;;AADlB,OAAd;AAGA;;;gCAEW;AACX;AACA,WAAKT,KAAL,CAAWU,OAAX,CAAmB,KAAKT,KAAL,CAAWC,cAA9B,EAFW,CAGX;;AACA,WAAKK,QAAL,CAAc;AACbL,QAAAA,cAAc,EAAE;AADH,OAAd;AAGA;;;6BAEQ;AACR,aACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACC;AACC,QAAA,SAAS,EAAC,WADX;AAEC,QAAA,WAAW,EAAC,qBAFb;AAGC,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,cAHnB;AAIC,QAAA,QAAQ,EAAE,KAAKC,eAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,EAOC;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,KAAKE,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPD,CADD;AAaA;;;;EAzCqBP,S;;AA4CvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport './NoteForm.css';\n\nclass NoteForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tnewNoteContent: ''\n\t\t};\n\t\tthis.handleUserInput = this.handleUserInput.bind(this);\n\t\tthis.writeNote = this.writeNote.bind(this);\n\t}\n\n\t//When user's input changes, set newNoteContent\n\t//to the value in the input box\n\thandleUserInput(e) {\n\t\tthis.setState({\n\t\t\tnewNoteContent: e.target.value //Value of text's inpput\n\t\t});\n\t}\n\n\twriteNote() {\n\t\t//Set noteContent for a value of inputs\n\t\tthis.props.addNote(this.state.newNoteContent);\n\t\t//set newNoteContent to an empty string\n\t\tthis.setState({\n\t\t\tnewNoteContent: ''\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"formWrapper\">\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"noteInput\"\n\t\t\t\t\tplaceholder=\"Jerrome, par ici...\"\n\t\t\t\t\tvalue={this.state.newNoteContent}\n\t\t\t\t\tonChange={this.handleUserInput}\n\t\t\t\t/>\n\t\t\t\t<button className=\"noteButton\" onClick={this.writeNote}>\n\t\t\t\t\tAdd Note\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default NoteForm;\n"]},"metadata":{},"sourceType":"module"}