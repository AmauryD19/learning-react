{"ast":null,"code":"import _classCallCheck from \"/home/jerrome/Bureau/oui/stplalist/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jerrome/Bureau/oui/stplalist/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jerrome/Bureau/oui/stplalist/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jerrome/Bureau/oui/stplalist/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jerrome/Bureau/oui/stplalist/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jerrome/Bureau/oui/stplalist/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jerrome/Bureau/oui/stplalist/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\nimport { DB_CONFIG } from './Config/config';\nimport 'firebase/database';\nimport firebase from 'firebase/app';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.addNote = _this.addNote.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.app = firebase.initializeApp(DB_CONFIG);\n    _this.db = _this.app.database().ref().child('notes'); // Setup React state of component\n\n    _this.state = {\n      notes: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      var previousNotes = this.state.notes; // Snapshot data\n\n      this.database.on('child_added', function (snap) {\n        previousNotes.push({\n          id: snap.key,\n          noteContent: snap.val().noteContent\n        });\n\n        _this2.setState({\n          notes: previousNotes\n        });\n      });\n    }\n  }, {\n    key: \"addNote\",\n    value: function addNote(note) {\n      this.database.push().set({\n        noteContent: note\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"notesWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"notesHeader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"To Do List\")), React.createElement(\"div\", {\n        className: \"notesBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.state.notes.map(function (note) {\n        return React.createElement(Note, {\n          noteContent: note.noteContent,\n          noteId: note.id,\n          key: note.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"notesFooter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(NoteForm, {\n        addNote: this.addNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/jerrome/Bureau/oui/stplalist/src/App.js"],"names":["React","Component","Note","NoteForm","DB_CONFIG","firebase","App","props","addNote","bind","app","initializeApp","db","database","ref","child","state","notes","previousNotes","on","snap","push","id","key","noteContent","val","setState","note","set","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAASC,SAAT,QAAyB,iBAAzB;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaC,IAAb,uDAAf;AAEA,UAAKC,GAAL,GAAWL,QAAQ,CAACM,aAAT,CAAuBP,SAAvB,CAAX;AAEA,UAAKQ,EAAL,GAAU,MAAKF,GAAL,CAASG,QAAT,GAAoBC,GAApB,GAA0BC,KAA1B,CAAgC,OAAhC,CAAV,CANgB,CAQhB;;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AATgB;AAYjB;;;;yCAEoB;AAAA;;AACnB,UAAMC,aAAa,GAAG,KAAKF,KAAL,CAAWC,KAAjC,CADmB,CAGnB;;AACA,WAAKJ,QAAL,CAAcM,EAAd,CAAiB,aAAjB,EAAgC,UAAAC,IAAI,EAAI;AACtCF,QAAAA,aAAa,CAACG,IAAd,CAAmB;AACjBC,UAAAA,EAAE,EAAEF,IAAI,CAACG,GADQ;AAEjBC,UAAAA,WAAW,EAAEJ,IAAI,CAACK,GAAL,GAAWD;AAFP,SAAnB;;AAKA,QAAA,MAAI,CAACE,QAAL,CAAc;AACZT,UAAAA,KAAK,EAAEC;AADK,SAAd;AAGD,OATD;AAUD;;;4BAEOS,I,EAAK;AACX,WAAKd,QAAL,CAAcQ,IAAd,GAAqBO,GAArB,CAAyB;AAAEJ,QAAAA,WAAW,EAAEG;AAAf,OAAzB;AACD;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,KAAKX,KAAL,CAAWC,KAAX,CAAiBY,GAAjB,CAAqB,UAACF,IAAD,EAAU;AAC7B,eACE,oBAAC,IAAD;AAAM,UAAA,WAAW,EAAEA,IAAI,CAACH,WAAxB;AAAqC,UAAA,MAAM,EAAEG,IAAI,CAACL,EAAlD;AAAsD,UAAA,GAAG,EAAEK,IAAI,CAACL,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,OAJD,CAFJ,CAJF,EAaE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,OAAO,EAAE,KAAKd,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,CADF;AAmBD;;;;EAxDeP,S;;AA2DlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Note from './Note/Note';\nimport NoteForm from './NoteForm/NoteForm';\nimport { DB_CONFIG} from './Config/config';\nimport 'firebase/database';\nimport firebase from 'firebase/app';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.addNote = this.addNote.bind(this);\n\n    this.app = firebase.initializeApp(DB_CONFIG);\n\n    this.db = this.app.database().ref().child('notes');\n\n    // Setup React state of component\n    this.state = {\n      notes: [],\n    }\n  }\n\n  componentWillMount() {\n    const previousNotes = this.state.notes;\n\n    // Snapshot data\n    this.database.on('child_added', snap => {\n      previousNotes.push({\n        id: snap.key,\n        noteContent: snap.val().noteContent,\n      })\n\n      this.setState({\n        notes: previousNotes\n      })\n    })\n  }\n\n  addNote(note){\n    this.database.push().set({ noteContent: note});\n  }\n\n  render() {\n    return (\n      <div className=\"notesWrapper\">\n        <div className=\"notesHeader\">\n          <div className=\"heading\">To Do List</div>\n        </div>\n        <div className=\"notesBody\">\n          {\n            this.state.notes.map((note) => {\n              return (\n                <Note noteContent={note.noteContent} noteId={note.id} key={note.id}/>\n              )\n            })\n          }\n          </div>\n        <div className=\"notesFooter\">\n          <NoteForm addNote={this.addNote}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}